name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black ruff mypy types-PyYAML types-tqdm
          
      - name: Check code formatting with black
        run: black --check --line-length=99 pygsquig/
        
      - name: Lint with ruff
        run: ruff check pygsquig/
        
      - name: Type check with mypy
        run: mypy pygsquig/ --ignore-missing-imports

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: Run tests with pytest
        run: |
          pytest tests/ -v --cov=pygsquig --cov-report=xml --cov-report=term
          
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  test-minimal:
    # Test minimal configuration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          
      - name: Test CLI commands
        run: |
          pygsquig-run --help
          pygsquig-analyse --help
          
      - name: Validate example configs
        run: |
          pygsquig-run examples/test_minimal.yml --dry-run
          pygsquig-run examples/sqg_alpha1_forced.yml --dry-run
          pygsquig-run examples/euler_2d.yml --dry-run

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme myst-parser
          
      - name: Build documentation
        run: |
          cd docs
          make html || echo "Docs not yet configured"